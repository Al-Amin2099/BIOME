{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/tonyamin/Desktop/Projects/BIOME/components/main/Add.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Camera } from 'expo-camera';\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(Camera.Constants.Type.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.cameraContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(Camera, {\n    style: styles.fixedRatio,\n    type: type,\n    ratio: '1:1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  })), React.createElement(Button, {\n    title: \"Flip Image\",\n    onPress: function onPress() {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  cameraContainer: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  fixedRatio: {\n    flex: 1,\n    aspectRatio: 1\n  }\n});","map":{"version":3,"sources":["/Users/tonyamin/Desktop/Projects/BIOME/components/main/Add.js"],"names":["React","useState","useEffect","Camera","App","hasPermission","setHasPermission","Constants","Type","back","type","setType","requestPermissionsAsync","status","flex","styles","cameraContainer","fixedRatio","front","StyleSheet","create","flexDirection","aspectRatio"],"mappings":";;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,MAAT,QAAuB,aAAvB;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACcH,QAAQ,CAAC,IAAD,CADtB;AAAA;AAAA,MACrBI,aADqB;AAAA,MACNC,gBADM;;AAAA,mBAEJL,QAAQ,CAACE,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsBC,IAAvB,CAFJ;AAAA;AAAA,MAErBC,IAFqB;AAAA,MAEfC,OAFe;;AAI5BT,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC0BC,MAAM,CAACS,uBAAP,EAD1B;;AAAA;AAAA;AACSC,cAAAA,MADT,yBACSA,MADT;AAECP,cAAAA,gBAAgB,CAACO,MAAM,KAAK,SAAZ,CAAhB;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,MAAIR,aAAa,KAAK,IAAtB,EAA4B;AAC1B,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAIA,aAAa,KAAK,KAAtB,EAA6B;AAC3B,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACS,MAAAA,IAAI,EAAE;AAAP,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIC,MAAM,CAACC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAID,MAAM,CAACE,UADpB;AAEI,IAAA,IAAI,EAAIP,IAFZ;AAGI,IAAA,KAAK,EAAI,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAQI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAG,YADZ;AAEI,IAAA,OAAO,EAAI,mBAAM;AACbC,MAAAA,OAAO,CAEHD,IAAI,KAAKP,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsBC,IAA/B,GACEN,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsBU,KADxB,GAEEf,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsBC,IAJrB,CAAP;AAMH,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADF;AAuBD;AAED,IAAMM,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,eAAe,EAAE;AACbF,IAAAA,IAAI,EAAE,CADO;AAEbO,IAAAA,aAAa,EAAE;AAFF,GADY;AAK7BJ,EAAAA,UAAU,EAAE;AACRH,IAAAA,IAAI,EAAE,CADE;AAERQ,IAAAA,WAAW,EAAE;AAFL;AALiB,CAAlB,CAAf","sourcesContent":["// Adds pictures to your profile\n\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport { Camera } from 'expo-camera';\n\nexport default function App() {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [type, setType] = useState(Camera.Constants.Type.back);\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await Camera.requestPermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return <View />;\n  }\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n\n  return (\n    <View style = {{flex: 1}}>\n        <View style = {styles.cameraContainer}>\n            <Camera \n                style = {styles.fixedRatio} \n                type = {type} \n                ratio = {'1:1'}/>\n        </View>\n\n        <Button\n            title = \"Flip Image\"\n            onPress = {() => {\n                setType(\n                    // changes which camera is being used (front / back)\n                    type === Camera.Constants.Type.back\n                    ? Camera.Constants.Type.front\n                    : Camera.Constants.Type.back\n                );\n            }}>\n        </Button>\n    </View>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n    cameraContainer: {\n        flex: 1,\n        flexDirection: 'row'\n    },\n    fixedRatio: {\n        flex: 1,\n        aspectRatio: 1\n    }\n})"]},"metadata":{},"sourceType":"module"}