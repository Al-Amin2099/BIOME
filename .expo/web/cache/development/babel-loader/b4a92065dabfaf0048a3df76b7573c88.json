{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/tonyamin/Desktop/Projects/BIOME/components/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialComunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser } from \"../redux/actions/index\";\nimport FeedScreen from \"./main/Feed\";\nimport ProfileScreen from \"./main/Profile\";\nimport SearchScreen from \"./main/Search\";\nvar Tab = createMaterialBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Feed\",\n        labeled: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialComunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Search\",\n        component: SearchScreen,\n        navigation: this.props.navigation,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return React.createElement(MaterialComunityIcons, {\n              name: \"magnify\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"AddContainer\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref3) {\n          var navigation = _ref3.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return React.createElement(MaterialComunityIcons, {\n              name: \"plus-thick\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        listeners: function listeners(_ref5) {\n          var navigation = _ref5.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Profile\", {\n                uid: firebase.auth().currentUser.uid\n              });\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var color = _ref6.color,\n                size = _ref6.size;\n            return React.createElement(MaterialComunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["/Users/tonyamin/Desktop/Projects/BIOME/components/Main.js"],"names":["React","Component","createMaterialBottomTabNavigator","MaterialComunityIcons","firebase","connect","bindActionCreators","fetchUser","FeedScreen","ProfileScreen","SearchScreen","Tab","EmptyScreen","Main","props","tabBarIcon","color","size","navigation","tabPress","event","preventDefault","navigate","uid","auth","currentUser","mapStateToProps","store","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["// main.js will be the file thats called after landing, login, and register\n\nimport React, { Component } from 'react'\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialComunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\n\nimport firebase from 'firebase'\n\n// in order access fetch user function\n// connect allows us to connect to redux\nimport {connect} from 'react-redux'\n// need to bind our actions to these components\nimport {bindActionCreators} from 'redux'\nimport {fetchUser} from '../redux/actions/index'\n\nimport FeedScreen from './main/Feed'\nimport ProfileScreen from './main/Profile'\nimport SearchScreen from './main/Search'\n \n// ------------------------------------------------------------------------------------\n\nconst Tab = createMaterialBottomTabNavigator();\n\nconst EmptyScreen = () => {\n    return(null)\n}\n\nexport class Main extends Component {\n    componentDidMount(){\n        this.props.fetchUser()\n    }\n    render() {\n        return (\n            <Tab.Navigator initialRouteName = \"Feed\" labeled = {false}>\n                <Tab.Screen name = \"Feed\" component = {FeedScreen} \n                    options = {{\n                        tabBarIcon: ({color, size}) => (\n                            <MaterialComunityIcons name = \"home\" color = {color} size = {26}/>\n                        ),\n                    }}\n                />\n                <Tab.Screen name = \"Search\" component = {SearchScreen} navigation = {this.props.navigation}\n                    options = {{\n                        tabBarIcon: ({color, size}) => (\n                            <MaterialComunityIcons name = \"magnify\" color = {color} size = {26}/>\n                        ),\n                    }}\n                />\n                <Tab.Screen name = \"AddContainer\" component = {EmptyScreen} \n                    // listeners openup other screens\n                    listeners = {({navigation}) => ({\n                        tabPress: event => {\n                            // prevents default action from occuring\n                            event.preventDefault();\n                            navigation.navigate(\"Add\")\n                        }\n                    })}\n                    options = {{\n                        tabBarIcon: ({color, size}) => (\n                            <MaterialComunityIcons name = \"plus-thick\" color = {color} size = {26}/>\n                        ),\n                    }}\n                />\n                <Tab.Screen name = \"Profile\" component= {ProfileScreen} \n                    listeners = {({navigation}) => ({\n                        tabPress: event => {\n                            // prevents default action from occuring\n                            event.preventDefault();\n                            navigation.navigate(\"Profile\", {uid: firebase.auth().currentUser.uid})\n                        }\n                    })}\n\n                    options = {{\n                        tabBarIcon: ({color, size}) => (\n                            <MaterialComunityIcons name = \"account-circle\" color = {color} size = {26}/>\n                        ),\n                    }}\n                />\n\n            </Tab.Navigator>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({fetchUser}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);\n"]},"metadata":{},"sourceType":"module"}