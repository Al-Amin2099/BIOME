{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/tonyamin/Desktop/Projects/BIOME/components/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators, bindActionCreatos } from 'redux';\nimport { fetchUser } from \"../redux/Actions/index\";\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var currentUser = this.props.currentUser;\n      console.log(currentUser);\n\n      if (currentUser == undefined) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }\n        }, \" \");\n      }\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, \" User is Logged In \"));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["/Users/tonyamin/Desktop/Projects/BIOME/components/Main.js"],"names":["React","Component","connect","bindActionCreators","bindActionCreatos","fetchUser","Main","props","currentUser","console","log","undefined","flex","justifyContent","mapStateToProps","store","userState","mapDispatchProps","dispatch"],"mappings":";;;;;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAKA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,kBAAR,EAA4BC,iBAA5B,QAAoD,OAApD;AACA,SAAQC,SAAR;AAIA,WAAaC,IAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCACuB;AACf,WAAKC,KAAL,CAAWF,SAAX;AACH;AAHL;AAAA;AAAA,6BAKa;AAAA,UACEG,WADF,GACiB,KAAKD,KADtB,CACEC,WADF;AAELC,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;;AACA,UAAGA,WAAW,IAAIG,SAAlB,EAA4B;AACxB,eACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAGH;;AACD,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAI;AAACC,UAAAA,IAAI,EAAE,CAAP;AAAUC,UAAAA,cAAc,EAAE;AAA1B,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,CADJ;AAKH;AAlBL;;AAAA;AAAA,EAA0BZ,SAA1B;;AAqBA,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChCP,IAAAA,WAAW,EAAEO,KAAK,CAACC,SAAN,CAAgBR;AADG,GAAZ;AAAA,CAAxB;;AAGA,IAAMS,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD;AAAA,SAAcf,kBAAkB,CAAC;AAACE,IAAAA,SAAS,EAATA;AAAD,GAAD,EAAca,QAAd,CAAhC;AAAA,CAAzB;;AAEA,eAAehB,OAAO,CAACY,eAAD,EAAkBG,gBAAlB,CAAP,CAA2CX,IAA3C,CAAf","sourcesContent":["// main.js will be the file thats called after landing, login, and register\n\nimport React, { Component } from 'react'\nimport {View, Text} from 'react-native'\n\n// in order access fetch user function\n// connect allows us to connect to redux\nimport {connect} from 'react-redux'\n// need to bind our actions to these components\nimport {bindActionCreators, bindActionCreatos} from 'redux'\nimport {fetchUser} from '../redux/Actions/index'\n\n// ------------------------------------------------------------------------------------\n\nexport class Main extends Component {\n    componentDidMount(){\n        this.props.fetchUser()\n    }\n\n    render() {\n        const {currentUser} = this.props;\n        console.log(currentUser)\n        if(currentUser == undefined){\n            return(\n                <View> </View>\n            )\n        }\n        return (\n            <View style = {{flex: 1, justifyContent: 'center'}}>\n                <Text> User is Logged In </Text>\n            </View>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({fetchUser}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);\n"]},"metadata":{},"sourceType":"module"}