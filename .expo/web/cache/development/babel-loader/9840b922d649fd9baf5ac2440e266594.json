{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/tonyamin/Desktop/Projects/BIOME/components/auth/Register.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from 'firebase';\nexport var Register = function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: '',\n      password: '',\n      name: ''\n    };\n    _this.onSignUp = _this.onSignUp.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"onSignUp\",\n    value: function onSignUp() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          name = _this$state.name;\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (result) {\n        firebase.firestore().collection(\"Users\").doc(firebase.auth().currentUser.uid).set({\n          name: name,\n          email: email\n        });\n        console.log(result);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"name\",\n        onChangeText: function onChangeText(name) {\n          return _this2.setState({\n            name: name\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"email\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.onSignUp();\n        },\n        title: \"Sign Up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Register;\n}(Component);\nexport default Register;","map":{"version":3,"sources":["/Users/tonyamin/Desktop/Projects/BIOME/components/auth/Register.js"],"names":["React","Component","firebase","Register","props","state","email","password","name","onSignUp","bind","auth","createUserWithEmailAndPassword","then","result","firestore","collection","doc","currentUser","uid","set","console","log","catch","error","setState"],"mappings":";;;;;;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAGA,OAAOC,QAAP,MAAqB,UAArB;AAIA,WAAaC,QAAb;AAAA;;AAAA;;AAEI,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AAETC,MAAAA,KAAK,EAAG,EAFC;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,IAAI,EAAE;AAJG,KAAb;AAOA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AAVc;AAWjB;;AAbL;AAAA;AAAA,+BAgBc;AAAA,wBAG0B,KAAKL,KAH/B;AAAA,UAGCC,KAHD,eAGCA,KAHD;AAAA,UAGQC,QAHR,eAGQA,QAHR;AAAA,UAGkBC,IAHlB,eAGkBA,IAHlB;AAINN,MAAAA,QAAQ,CAACS,IAAT,GAAgBC,8BAAhB,CAA+CN,KAA/C,EAAsDC,QAAtD,EAEKM,IAFL,CAEU,UAACC,MAAD,EAAY;AAEdZ,QAAAA,QAAQ,CAACa,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EACKC,GADL,CACSf,QAAQ,CAACS,IAAT,GAAgBO,WAAhB,CAA4BC,GADrC,EAEKC,GAFL,CAES;AAACZ,UAAAA,IAAI,EAAJA,IAAD;AAAOF,UAAAA,KAAK,EAALA;AAAP,SAFT;AAGAe,QAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACH,OARL,EASKS,KATL,CASW,UAACC,KAAD,EAAW;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,OAXL;AAYH;AAhCL;AAAA;AAAA,6BAmCa;AAAA;;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAG,MADlB;AAEI,QAAA,YAAY,EAAI,sBAAChB,IAAD;AAAA,iBAAU,MAAI,CAACiB,QAAL,CAAc;AAACjB,YAAAA,IAAI,EAAJA;AAAD,WAAd,CAAV;AAAA,SAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAMI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAG,OADlB;AAEI,QAAA,YAAY,EAAI,sBAACF,KAAD;AAAA,iBAAW,MAAI,CAACmB,QAAL,CAAc;AAACnB,YAAAA,KAAK,EAALA;AAAD,WAAd,CAAX;AAAA,SAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAUI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAG,UADlB;AAEI,QAAA,eAAe,EAAI,IAFvB;AAGI,QAAA,YAAY,EAAI,sBAACC,QAAD;AAAA,iBAAc,MAAI,CAACkB,QAAL,CAAc;AAAClB,YAAAA,QAAQ,EAARA;AAAD,WAAd,CAAd;AAAA,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,EAgBI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAI;AAAA,iBAAM,MAAI,CAACE,QAAL,EAAN;AAAA,SADf;AAEI,QAAA,KAAK,EAAG,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,CADJ;AAyBH;AA7DL;;AAAA;AAAA,EAA8BR,SAA9B;AAgEA,eAAeE,QAAf","sourcesContent":["// registering a user to log in to the app\n\nimport React, { Component } from 'react'\nimport {View, Button, TextInput} from 'react-native'\n\nimport firebase from 'firebase'\n\n// -------------------------------------------------------------------------------------------\n\nexport class Register extends Component {\n    // initialize components\n    constructor(props){\n        super(props);\n\n        this.state = {\n            // parameters needed for new users to register\n            email : '',\n            password: '',\n            name: ''\n        }\n        // binds these variables to onSignUp function\n        this.onSignUp = this.onSignUp.bind(this)\n    }\n\n    // signup function, bounded to state variables\n    onSignUp(){\n\n        // grabs variables in state variable \n        const {email, password, name} = this.state;\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            // after getting response from firebase server\n            .then((result) => {\n                // create user in firebase firestore database\n                firebase.firestore().collection(\"Users\")\n                    .doc(firebase.auth().currentUser.uid)\n                    .set({name, email})\n                console.log(result)\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    // render is called anytime a state component changes, or component loads\n    render() {\n        return (\n            <View>\n                \n                <TextInput \n                    placeholder = \"name\"\n                    onChangeText = {(name) => this.setState({name})}\n                />\n                <TextInput \n                    placeholder = \"email\"\n                    onChangeText = {(email) => this.setState({email})}\n                />\n                <TextInput \n                    placeholder = \"password\"\n                    secureTextEntry = {true} // hides user text input of password\n                    onChangeText = {(password) => this.setState({password})}\n                />\n\n                <Button \n                    onPress = {() => this.onSignUp()}\n                    title = \"Sign Up\"\n                \n                />\n\n            </View>\n        )\n    }\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}