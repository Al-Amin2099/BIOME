{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/tonyamin/Desktop/Projects/BIOME/components/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialComunityIcons } from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators, bindActionCreatos } from 'redux';\nimport { fetchUser } from \"../redux/Actions/index\";\nimport FeedSCreen from \"./main/Feed\";\nvar Tab = createBottomTabNavigator();\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialComunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Add\",\n        component: AddScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return React.createElement(MaterialComunityIcons, {\n              name: \"plus-thick   \",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialComunityIcons, {\n              name: \"Profile\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["/Users/tonyamin/Desktop/Projects/BIOME/components/Main.js"],"names":["React","Component","createBottomTabNavigator","MaterialComunityIcons","connect","bindActionCreators","bindActionCreatos","fetchUser","FeedSCreen","Tab","Main","props","FeedScreen","tabBarIcon","color","size","AddScreen","ProfileScreen","mapStateToProps","store","currentUser","userState","mapDispatchProps","dispatch"],"mappings":";;;;;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAAQC,qBAAR;AAIA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,kBAAR,EAA4BC,iBAA5B,QAAoD,OAApD;AACA,SAAQC,SAAR;AACA,OAAOC,UAAP;AAIA,IAAMC,GAAG,GAAGP,wBAAwB,EAApC;AAEA,WAAaQ,IAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCACuB;AACf,WAAKC,KAAL,CAAWJ,SAAX;AACH;AAHL;AAAA;AAAA,6BAIa;AAAA;;AACL,aACI,oBAAC,GAAD,CAAK,SAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,MAAjB;AAAwB,QAAA,SAAS,EAAEK,UAAnC;AACI,QAAA,OAAO,EAAI;AACPC,UAAAA,UAAU,EAAE;AAAA,gBAAEC,KAAF,QAAEA,KAAF;AAAA,gBAASC,IAAT,QAASA,IAAT;AAAA,mBACR,oBAAC,qBAAD;AAAuB,cAAA,IAAI,EAAG,MAA9B;AAAqC,cAAA,KAAK,EAAID,KAA9C;AAAqD,cAAA,IAAI,EAAI,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ;AAAA;AADL,SADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAQI,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,KAAjB;AAAuB,QAAA,SAAS,EAAEE,SAAlC;AACI,QAAA,OAAO,EAAI;AACPH,UAAAA,UAAU,EAAE;AAAA,gBAAEC,KAAF,SAAEA,KAAF;AAAA,gBAASC,IAAT,SAASA,IAAT;AAAA,mBACR,oBAAC,qBAAD;AAAuB,cAAA,IAAI,EAAG,eAA9B;AAA8C,cAAA,KAAK,EAAID,KAAvD;AAA8D,cAAA,IAAI,EAAI,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ;AAAA;AADL,SADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EAeI,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,SAAjB;AAA2B,QAAA,SAAS,EAAEG,aAAtC;AACI,QAAA,OAAO,EAAI;AACPJ,UAAAA,UAAU,EAAE;AAAA,gBAAEC,KAAF,SAAEA,KAAF;AAAA,gBAASC,IAAT,SAASA,IAAT;AAAA,mBACR,oBAAC,qBAAD;AAAuB,cAAA,IAAI,EAAG,SAA9B;AAAwC,cAAA,KAAK,EAAID,KAAjD;AAAwD,cAAA,IAAI,EAAI,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ;AAAA;AADL,SADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,CADJ;AA0BH;AA/BL;;AAAA;AAAA,EAA0Bb,SAA1B;;AAkCA,IAAMiB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChCC,IAAAA,WAAW,EAAED,KAAK,CAACE,SAAN,CAAgBD;AADG,GAAZ;AAAA,CAAxB;;AAGA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD;AAAA,SAAclB,kBAAkB,CAAC;AAACE,IAAAA,SAAS,EAATA;AAAD,GAAD,EAAcgB,QAAd,CAAhC;AAAA,CAAzB;;AAEA,eAAenB,OAAO,CAACc,eAAD,EAAkBI,gBAAlB,CAAP,CAA2CZ,IAA3C,CAAf","sourcesContent":["// main.js will be the file thats called after landing, login, and register\n\nimport React, { Component } from 'react'\nimport {View, Text} from 'react-native'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport {MaterialComunityIcons} from 'react-native-vector-icons/MaterialCommunityIcons'\n\n// in order access fetch user function\n// connect allows us to connect to redux\nimport {connect} from 'react-redux'\n// need to bind our actions to these components\nimport {bindActionCreators, bindActionCreatos} from 'redux'\nimport {fetchUser} from '../redux/Actions/index'\nimport FeedSCreen from './main/Feed'\n\n// ------------------------------------------------------------------------------------\n\nconst Tab = createBottomTabNavigator();\n\nexport class Main extends Component {\n    componentDidMount(){\n        this.props.fetchUser()\n    }\n    render() {\n        return (\n            <Tab.Navigator>\n                <Tab.Screen name=\"Feed\" component={FeedScreen} \n                    options = {{\n                        tabBarIcon: ({color, size}) => (\n                            <MaterialComunityIcons name = \"home\" color = {color} size = {26}/>\n                        ),\n                    }}\n                />\n                <Tab.Screen name=\"Add\" component={AddScreen} \n                    options = {{\n                        tabBarIcon: ({color, size}) => (\n                            <MaterialComunityIcons name = \"plus-thick   \" color = {color} size = {26}/>\n                        ),\n                    }}\n                />\n                <Tab.Screen name=\"Profile\" component={ProfileScreen} \n                    options = {{\n                        tabBarIcon: ({color, size}) => (\n                            <MaterialComunityIcons name = \"Profile\" color = {color} size = {26}/>\n                        ),\n                    }}\n                />\n\n            </Tab.Navigator>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({fetchUser}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);\n"]},"metadata":{},"sourceType":"module"}