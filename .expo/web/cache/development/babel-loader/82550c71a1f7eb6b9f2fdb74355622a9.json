{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/tonyamin/Desktop/Projects/BIOME/components/main/Profile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nfunction Profile(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      userPosts = _useState2[0],\n      setUserPosts = _useState2[1];\n\n  var _useState3 = useState([null]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  useEffect(function () {\n    var currentUser = props.currentUser,\n        posts = props.posts;\n    console.log({\n      currentUser: currentUser,\n      posts: posts\n    });\n\n    if (props.route.params.uid === firebase.auth().currentUser.uid) {\n      setUser(currentUser);\n      setUserPosts(posts);\n    } else {\n      firebase.firestore().collection(\"User\").doc(props.route.params.uid).get().then(function (snapshot) {\n        if (snapshot.exists) {\n          setUser(snapshot.data());\n        } else {\n          console.log(\"Snapshot Does Not Exist\");\n        }\n      });\n      firebase.firestore().collection(\"Posts\").doc(props.route.params.uid).collection(\"userPosts\").orderBy(\"creation\", \"asc\").get().then(function (snapshot) {\n        var posts = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var dataID = doc.id;\n          return _objectSpread({\n            dataID: dataID\n          }, data);\n        });\n        setUserPosts(posts);\n      });\n    }\n  }, [props.route.params.uid]);\n\n  if (user === null) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    styles: styles.containerInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \" \", user.name, \" \"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \" \", user.email, \" \")), React.createElement(View, {\n    styles: styles.containerGallery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 3,\n    horizontal: false,\n    data: userPosts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      }, \"style = \", styles.containerImage, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.downloadURL\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  containerInfo: {\n    margin: 20\n  },\n  containerGallery: {\n    flex: 1\n  },\n  containerImage: {\n    flex: 1\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1 / 1\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    posts: store.userState.posts\n  };\n};\n\nexport default connect(mapStateToProps, null)(Profile);","map":{"version":3,"sources":["/Users/tonyamin/Desktop/Projects/BIOME/components/main/Profile.js"],"names":["React","useState","useEffect","connect","firebase","require","Profile","props","userPosts","setUserPosts","user","setUser","currentUser","posts","console","log","route","params","uid","auth","firestore","collection","doc","get","then","snapshot","exists","data","orderBy","docs","map","dataID","id","styles","container","containerInfo","name","email","containerGallery","item","containerImage","image","uri","downloadURL","StyleSheet","create","flex","margin","aspectRatio","mapStateToProps","store","userState"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {StyleSheet, View, Text, Image, FlatList} from 'react-native'\n\nimport {connect} from 'react-redux'\n\nimport firebase from 'firebase'\nrequire ('firebase/firestore')\n\n// ------------------------------------------------------------------------------------\n\nfunction Profile(props) {\n\n    const [userPosts, setUserPosts] = useState([]);\n    const [user, setUser] = useState([null]);\n\n    useEffect(() => {\n        const {currentUser, posts} = props;\n        console.log({currentUser, posts})\n\n        if(props.route.params.uid === firebase.auth().currentUser.uid){\n            setUser(currentUser)\n            setUserPosts(posts)\n        }\n        else {\n            firebase.firestore()\n                .collection(\"User\")\n                .doc(props.route.params.uid)\n                .get()\n                .then((snapshot) => {\n                    if(snapshot.exists){\n                        setUser(snapshot.data());\n                    }\n                    else{\n                        console.log(\"Snapshot Does Not Exist\")\n                    }\n                })\n            firebase.firestore()\n                .collection(\"Posts\")\n                .doc(props.route.params.uid)\n                .collection(\"userPosts\")\n                .orderBy(\"creation\", \"asc\")\n                .get()\n                .then((snapshot) => {\n                    let posts = snapshot.docs.map(doc => {\n                        // map function will iterate through all docs in the snapshot and build an array\n                        // of posts\n                        const data = doc.data();\n                        const dataID = doc.id;\n                        return {dataID, ...data}\n                    })\n                    setUserPosts(posts)\n                })\n        }\n    }, [props.route.params.uid])\n\n    if(user === null)\n    {\n        return <View/>\n    }\n    return (\n        <View style = {styles.container}>\n            <View styles = {styles.containerInfo}>\n                <Text> {user.name} </Text> \n                <Text> {user.email} </Text>\n            </View>\n\n            <View styles = {styles.containerGallery}>\n                <FlatList \n                    numColumns = {3}\n                    horizontal = {false} // will be a vertical scroll view\n                    data = {userPosts}\n                    renderItem = {({item}) => (\n                        <View>\n                            style = {styles.containerImage}\n                            <Image\n                                style = {styles.image}\n                                source = {{uri: item.downloadURL}}\n                            />\n                        </View>\n                    )}\n                />\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1\n    },\n    containerInfo: {\n        margin: 20\n    },\n    containerGallery: {\n        flex: 1\n    },\n    containerImage: {\n        flex: 1\n    },\n    image: {\n        flex: 1,\n        aspectRatio: 1/1\n    },\n})\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    posts: store.userState.posts\n})\n\nexport default connect(mapStateToProps, null)(Profile);"]},"metadata":{},"sourceType":"module"}